# Generated by Django 5.2.5 on 2025-08-30 08:49

import django.core.validators
import django.db.models.deletion
import scanner.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('scanner', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='scanresult',
            options={'ordering': ['-created_at']},
        ),
        migrations.RemoveField(
            model_name='scanresult',
            name='accuracy_score',
        ),
        migrations.RemoveField(
            model_name='scanresult',
            name='community_reports',
        ),
        migrations.RemoveField(
            model_name='scanresult',
            name='content_analysis',
        ),
        migrations.RemoveField(
            model_name='scanresult',
            name='risk_score',
        ),
        migrations.RemoveField(
            model_name='scanresult',
            name='scam_keywords_found',
        ),
        migrations.RemoveField(
            model_name='scanresult',
            name='scan_type',
        ),
        migrations.AddField(
            model_name='scanresult',
            name='domain',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='scanresult',
            name='domain_created',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='scanresult',
            name='report_card',
            field=models.JSONField(default=dict, help_text='Structured report card data'),
        ),
        migrations.AddField(
            model_name='scanresult',
            name='risk_category',
            field=models.CharField(choices=[('low', 'Low Risk'), ('medium', 'Medium Risk'), ('high', 'High Risk'), ('critical', 'Critical Risk')], default='medium', max_length=20),
        ),
        migrations.AddField(
            model_name='scanresult',
            name='security_score',
            field=models.IntegerField(default=0, help_text='Overall security score 0-100'),
        ),
        migrations.AddField(
            model_name='scanresult',
            name='ssl_grade',
            field=models.CharField(default='N/A', help_text='SSL Security Grade (A+, A, B, C, F)', max_length=10, validators=[scanner.models.validate_ssl_grade]),
        ),
        migrations.AddField(
            model_name='scanresult',
            name='trust_score',
            field=models.IntegerField(default=0, help_text='Trustworthiness score'),
        ),
        migrations.AlterField(
            model_name='communityreport',
            name='scan_result',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_reports', to='scanner.scanresult'),
        ),
        migrations.AlterField(
            model_name='scanresult',
            name='domain_age',
            field=models.IntegerField(default=1, help_text='Domain age in years'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='scanresult',
            name='risk_level',
            field=models.IntegerField(help_text='Risk score from 0-100'),
        ),
        migrations.CreateModel(
            name='CommunityStory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of your story', max_length=200)),
                ('story', models.TextField(help_text='Tell us what happened. Your story could help protect others...')),
                ('website_url', models.URLField(blank=True, help_text='Website URL involved in the scam (optional)', max_length=500, null=True, validators=[django.core.validators.URLValidator()])),
                ('phone_number', models.CharField(blank=True, help_text='Phone number involved in the scam (optional)', max_length=20, null=True)),
                ('scam_type', models.CharField(choices=[('tech_support', 'Fake Tech Support'), ('phishing', 'Phishing Scam'), ('investment', 'Investment Scam'), ('social_media', 'Social Media Scam'), ('online_shopping', 'Online Shopping Fraud'), ('romance', 'Romance Scam'), ('lottery', 'Lottery/Sweepstakes'), ('other', 'Other Scam Type')], default='other', help_text='Type of scam experienced', max_length=50)),
                ('author_name', models.CharField(blank=True, help_text='Your name (optional)', max_length=100)),
                ('is_anonymous', models.BooleanField(default=False, help_text='Submit anonymously')),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('featured', 'Featured Story'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('is_public', models.BooleanField(default=True, help_text='Make this story visible to the community')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Community Story',
                'verbose_name_plural': 'Community Stories',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SecurityReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_guide', models.TextField(default="ðŸŸ¢ A or A+ Grade: Excellent. This site uses top-tier security. You can browse and shop with confidence.\nðŸŸ¡ B or C Grade: Warning. The security is outdated or weak. Be cautious about entering sensitive information.\nðŸ”´ F Grade: Danger. This site's security is broken or missing. Do not enter any personal details.", help_text='SSL GRADE GUIDE explanation')),
                ('recommendations', models.TextField(blank=True, help_text='Security recommendations')),
                ('warnings', models.TextField(blank=True, help_text='Specific warnings')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('scan_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='security_reports', to='scanner.scanresult')),
            ],
        ),
    ]
